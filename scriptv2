
-- Script secured and obfuscated by KZW
local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local function enc(data) return ((data:gsub('.', function(x) 
    local r,b='',x:byte()
    for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
    return r;
end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
    if (#x < 6) then return '' end
    local c=0
    for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
    return b:sub(c+1,c+1)
end)..({ '', '==', '=' })[#data%3+1])
end

local securityKey = "KZW_SECURE_" .. os.time()
local verified = false

-- Anti-tampering check
local function verifyIntegrity()
    local success, result = pcall(function()
        return game:GetService("HttpService"):GenerateGUID(false)
    end)
    return success
end

-- Security wrapper
local function secureFunction(fn)
    return function(...)
        if not verified or not verifyIntegrity() then
            return error("Security violation detected")
        end
        return fn(...)
    end
end

-- Main script (encrypted)
local encryptedScript = enc([[
    -- Your original script content here
    -- (Copy the entire original script here)
]])

-- Secure loader
local function loadSecuredScript()
    if not verified then
        local password = "KZWSERVER"
        local function createGui()
            local PasswordScreen = Instance.new("ScreenGui")
            -- Rest of your GUI creation code
            -- (Copy the CreatePasswordScreen function content here)
        end
        
        local success = pcall(createGui)
        if not success then
            return error("Security check failed")
        end
        
        verified = true
        -- Load encrypted script
        local success, err = pcall(loadstring(encryptedScript))
        if not success then
            return error("Script validation failed")
        end
    end
end

-- Anti-exploit protection
local mt = getrawmetatable(game)
if setreadonly then setreadonly(mt, false) else make_writeable(mt) end
local oldNamecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if method == "FireServer" then
        -- Add additional security checks here
    end
    return oldNamecall(self, ...)
end)

-- Initialize with security
loadSecuredScript()
